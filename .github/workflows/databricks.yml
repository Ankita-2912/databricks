name: Databricks Notebook Deployment

on: 
  # push:
  #   branches:
  #     - feature
  workflow_dispatch:

jobs:
  deploy-notebooks:
    runs-on: windows-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Databricks CLI
      run: |
        pip install databricks-cli
        pip install --upgrade databricks-cli

    # - name: Authenticate Databricks CLI
    #   env:
    #     DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
    #     DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
    #   run: |
    #     echo "Authenticating Databricks CLI..."
    #     echo $DATABRICKS_HOST
    #     echo $DATABRICKS_TOKEN
    #     databricks workspace ls /  

    - name: Authenticate Databricks CLI
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        # echo "Authenticating Databricks CLI..."
        # echo $DATABRICKS_HOST
        # echo $DATABRICKS_TOKEN
        echo [DEFAULT] > ~\.databrickscfg
        echo host=${{ vars.DATABRICKS_HOST }} >> ~\.databrickscfg
        echo token=${{ secrets.DATABRICKS_TOKEN }} >> ~\.databrickscfg
        echo jobs-api-version=2.1 >> ~\.databrickscfg
        databricks workspace ls /  

    # - name: Deploy Notebooks to Databricks workspace
    #   env:
    #     DATABRICKS_HOST: ${{ vars.DATABRICKS_URL }}
    #     DATABRICKS_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Deploy Notebooks
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        echo "Deploying Notebooks to Databricks..."
        databricks workspace import_dir --overwrite "Test-Notebooks" "/Notebooks/"
